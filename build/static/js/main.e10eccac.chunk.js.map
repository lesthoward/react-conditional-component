{"version":3,"sources":["components/Box.tsx","components/List.tsx","components/ListClass.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Box","animal","className","src","image","name","habitat","slogan","List","animalsArr","map","Math","random","ListClass","this","props","React","Component","App","scientificName","useState","view","setView","message","setMessage","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMA0BeA,EAhBY,SAAC,GAAc,IAAbC,EAAY,EAAZA,OACzB,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKA,UAAU,cAAf,SACI,qBAAKC,IAAG,iBAAYF,EAAOG,MAAnB,QAAgCF,UAAU,gBAGtD,sBAAKA,UAAU,gBAAf,UACI,oBAAGA,UAAU,aAAb,UAA0B,mBAAGA,UAAU,cAAb,mBAA1B,IAAgED,EAAOI,QACvE,oBAAGH,UAAU,aAAb,UAA0B,mBAAGA,UAAU,cAAb,sBAA1B,IAAmED,EAAOK,WAC1E,oBAAGJ,UAAU,aAAb,UAA0B,mBAAGA,UAAU,cAAb,0BAA1B,IAAuED,EAAOM,iBCC/EC,EAdwB,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACzC,OACC,sBAAKP,UAAU,OAAf,UACC,oBAAIA,UAAU,cAAd,0CACCO,EAAWC,KAAI,SAACT,GAAD,OACf,cAAC,EAAD,CAEgBA,OAAQA,GADHU,KAAKC,iB,4BCNxBC,E,4JACF,WAEI,OACI,sBAAKX,UAAU,OAAf,UACI,oBAAIA,UAAU,cAAd,qCACCY,KAAKC,MAAMN,WAAWC,KAAI,SAACT,GAAD,OACvB,cAAC,EAAD,CAEIA,OAAQA,GADHU,KAAKC,oB,GARVI,IAAMC,WAgBfJ,ICuDAK,MAzEf,WACC,IAAMT,EAAa,CAClB,CACCU,eAAgB,gBAChBd,KAAM,OACNC,QAAS,8BACTC,OAAQ,uCACRH,MAAO,QAER,CACCe,eAAgB,2BAChBd,KAAM,qBACNC,QAAS,UACTC,OAAQ,yCACRH,MAAO,SAER,CACCe,eAAgB,gBAChBd,KAAM,MACNC,QAAS,oBACTF,MAAO,MACPG,OAAQ,+CAET,CACCY,eAAgB,6BAChBd,KAAM,eACNC,QAAS,iCACTF,MAAO,UACPG,OAAQ,uDAET,CACCY,eAAgB,iBAChBd,KAAM,cACNC,QACC,sFACDF,MAAO,OACPG,OAAQ,+CAGV,EAAwBa,mBAAS,cAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACG,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAYH,OACC,cAAC,WAAD,UACC,sBAAKtB,UAAU,YAAf,UACa,wBAAQA,UAAU,iBACduB,QAAS,kBAZjBH,EADQ,eAATD,EACS,QAEA,mBAEZG,GAAW,IAOH,2BAKID,EAAU,uBAAMrB,UAAU,UAAhB,gCAA6C,2CAAYmB,KAAzD,6BAA0G,KAG1H,eAATA,EACA,cAAC,EAAD,CAAMZ,WAAYA,IAElB,cAAC,EAAD,CAAWA,WAAYA,UCzDbiB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e10eccac.chunk.js","sourcesContent":["import React, {Fragment} from 'react'\r\ninterface animalObj {\r\n    scientificName: string,\r\n    name: string,\r\n    habitat: string,\r\n    slogan: string,\r\n    image: string,\r\n}\r\n\r\n\r\nconst Box: React.FC<any> = ({animal}) => {\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card__image\">\r\n                <img src={`images/${animal.image}.jpg`} className=\"card__img\" />\r\n            </div>\r\n\r\n            <div className=\"card__content\">\r\n                <p className=\"card__name\"><p className=\"card__title\">Name:</p> {animal.name}</p>\r\n                <p className=\"card__name\"><p className=\"card__title\">Habitat:</p> {animal.habitat}</p>\r\n                <p className=\"card__name\"><p className=\"card__title\">Description:</p> {animal.slogan}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Box","import React, { Fragment } from 'react';\r\nimport Box from './Box';\r\n\r\ninterface propsInterface {\r\n\tanimalsArr: object[];\r\n}\r\n\r\nconst List: React.FC<propsInterface> = ({ animalsArr }) => {\r\n\treturn (\r\n\t\t<div className=\"list\">\r\n\t\t\t<h1 className=\"list__title\">Species list from functional</h1>\r\n\t\t\t{animalsArr.map((animal) => (\r\n\t\t\t\t<Box\r\n                    key={Math.random()} \r\n                    animal={animal} \r\n                />\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default List;\r\n","import React, {Fragment} from 'react'\r\nimport Box from './Box'\r\n\r\ninterface propsInterface {\r\n\tanimalsArr: object[];\r\n}\r\n\r\nclass ListClass extends React.Component<propsInterface> {\r\n    render () {\r\n\r\n        return (\r\n            <div className=\"list\">\r\n                <h1 className=\"list__title\">Species list from class</h1>\r\n                {this.props.animalsArr.map((animal) => (\r\n                    <Box\r\n                        key={Math.random()} \r\n                        animal={animal} \r\n                    />\r\n                ))}\r\n            </div>\r\n        )\r\n    }\r\n} \r\nexport default ListClass","import React, { Fragment, useEffect, useState } from 'react';\nimport './App.css';\nimport List from './components/List';\nimport ListClass from './components/ListClass';\n\nfunction App() {\n\tconst animalsArr = [\n\t\t{\n\t\t\tscientificName: 'Puma Concolor',\n\t\t\tname: 'Puma',\n\t\t\thabitat: 'Mountain, forest and jungle',\n\t\t\tslogan: 'Has longer back legs than front legs',\n\t\t\timage: 'puma',\n\t\t},\n\t\t{\n\t\t\tscientificName: '    Haliaeetus albicilla',\n\t\t\tname: 'White-Tailed Eagle',\n\t\t\thabitat: 'Eurasia',\n\t\t\tslogan: 'It is one of the biggest birds of prey',\n\t\t\timage: 'eagle',\n\t\t},\n\t\t{\n\t\t\tscientificName: 'Vulpes vulpes',\n\t\t\tname: 'Fox',\n\t\t\thabitat: \"Russia's Far East\",\n\t\t\timage: 'fox',\n\t\t\tslogan: 'There are 12 different species in the world',\n\t\t},\n\t\t{\n\t\t\tscientificName: 'Panthera pardus orientalis',\n\t\t\tname: 'Amur Leopard',\n\t\t\thabitat: 'Woodland areas and urban parks',\n\t\t\timage: 'leopard',\n\t\t\tslogan: 'The Amur leopard may be the rarest big cat on Earth',\n\t\t},\n\t\t{\n\t\t\tscientificName: 'Phoca vitulina',\n\t\t\tname: 'Harbor Seal',\n\t\t\thabitat:\n\t\t\t\t'Coastal waters of the Pacific and Atlantic Oceans, the Baltic Sea and the North Sea',\n\t\t\timage: 'seal',\n\t\t\tslogan: 'Harbor seals can dive as deep as 1400 feet',\n\t\t},\n\t];\n\tconst [view, setView] = useState('functional');\n    const [message, setMessage] = useState(false)\n\n    const changeScreen = () => {\n        if(view === 'functional') {\n            setView('class')\n        } else {\n            setView('functional')\n        }\n        setMessage(true)\n    }\n\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className=\"container\">\n                <button className=\"change__screen\"\n                    onClick={() => changeScreen()}\n                >Change screen</button>\n                \n                {\n                    message ? <span className=\"message\">You have change to <strong>{`${view}`}</strong> component successfully</span> : null\n                }\n\n\t\t\t\t{view === 'functional' ? (\n\t\t\t\t\t<List animalsArr={animalsArr} />\n\t\t\t\t) : (\n\t\t\t\t\t<ListClass animalsArr={animalsArr} />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}